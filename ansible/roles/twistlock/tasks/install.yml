---

- name: Docker Registry 
  shell: oc get route docker-registry -n default
  ignore_errors: yes
  register: route_out

- name: create Docker Registry 
  shell: IMAGE_REGISTRY_EXTERNAL=$(oc get route docker-registry -n default | awk '{print $2}' | tail -n +2) ; IMAGE_REGISTRY_INTERNAL="docker-registry.default.svc:5000"; IMAGE_REGISTRY_ADDRESS="$IMAGE_REGISTRY_INTERNAL/twistlock/private:console_{{TWISTLOCK_VERSION}}" 
  when: route_out|failed


- name: Create project
  oc:
    state: present
    inline:
      kind: ProjectRequest
      metadata:
        name: ansibletestproject
      displayName: Ansible Test Project
      description: This project was created using Ansible
    token: << redacted >>


- name: setup imageStream pass-thr
  shell: oc create secret docker-registry twistlock-registry --docker-server=registry.twistlock.com --docker-username=twistlock --docker-password=${ACCESS_TOKEN}} --docker-email=customer@example.com ;oc import-image twistlock/defender:defender_{{TWISTLOCK_VERSION}} --from=registry.twistlock.com/twistlock/defender:defender_{{TWISTLOCK_VERSION}} --confirm; oc import-image twistlock/console:console_{{TWISTLOCK_VERSION}} --from=registry.twistlock.com/twistlock/console:console_{{TWISTLOCK_VERSION}} --confirm
  #ignore_errors: yes
  # register: cmd_out

 

- name: Download tar for twistlock 
  shell: wget {{ TWISTLOCK_RELEASE_URL }} -O /opt/   
 

- name: Extract foo.tgz
  unarchive:
    src: twistlock.tar.gz
    dest: /opt/


- name: Create a Persistent Volume Claim from an inline definition
  openshift_raw:
    state: present
    definition:
      apiVersion: v1
      kind: PersistentVolumeClaim
      metadata:
        name: elastic-volume
        namespace: testing
      spec:
        resources:
          requests:
            storage: 5Gi
        accessModes:
        - ReadWriteOnce    
- name: Generating Twistlock Console Deployment
  shell: {{ os }}/ twistcli console export openshift --namespace "$TWISTLOCK_NAMESPACE"  --persistent-volume-labels "$PV_LABELS" --image-name "$IMAGE_REGISTRY_ADDRESS" --orchestration-cli "oc" --service-type "ClusterIP" 
 
- name: Create a Twistlock Deployment
  openshift_raw:
    state: present
    src: /opt/twistlock_console.yaml 

- name: create Twistlock Console route
  openshift_raw:
    state: present
    src: /opt/twistlock_console.yaml 

- name: Generating deamonsets
  shell: machine/twistcli defender export openshift \
  --address https://$TWISTLOCK_EXTERNAL_ROUTE \
  --cluster-address $(oc get service twistlock-console -n $TWISTLOCK_NAMESPACE | awk '{print $2}' | tail -n +2) \
  --namespace $TWISTLOCK_NAMESPACE \
  --image-name $IMAGE_REGISTRY_INTERNAL/$TWISTLOCK_NAMESPACE/private:defender_$TWISTLOCK_VERSION \
  --user $TWISTLOCK_CONSOLE_USER \
  --password $TWISTLOCK_CONSOLE_PASSWORD
   

- name: Create a Twistlock Daemonset
  openshift_raw:
    state: present
    src: /opt/daemonset.yaml 
          
